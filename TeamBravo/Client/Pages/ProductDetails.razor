@page "/product/{id}"
@inject IProductService ProductService
@inject ILocalStorageService LocalStorage
@inject IToastService ToastService 
@inject ICartService CartService

<div class="container">
        <div class="featured-brands">
            <img class="card-img" src="@product.ImgUrl" alt="=@product.Title" />
        </div>
        <div class="media-body">
            <h2 class="mb-0">@product.Title</h2>
            <p>@product.Description</p>
            @if (product.OriginalPrice > product.Price)
                {
                    <h6 class="text-muted original-price">$@product.OriginalPrice</h6>
                }
            <h4 class="price">
                $@product.Price
            </h4>
            <button class="btn btn-primary" @onclick="AddToCart"><i class="oi oi-cart">&nbsp;&nbsp;&nbsp;Add to Cart</i></button>
        </div>
    </div>


@code { private Product product = null;

    [Parameter]
    public string Id { get; set; }

    protected override void OnInitialized()
    {
        if (ProductService.Products == null || ProductService.Products.Count == 0)
        {
            ProductService.LoadProducts();
        }

        product = ProductService.Products.FirstOrDefault(product => product.Id == Int32.Parse(Id));
    }

    private Product GetProduct()
    {
        var prodId = ProductService.Products.FirstOrDefault(product => product.Id == Int32.Parse(Id));
        return prodId;
    }

    private async Task AddToCart()
    {
        await CartService.AddToCart(GetProduct());
    }
}
